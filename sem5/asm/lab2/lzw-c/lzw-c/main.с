#include <stdint.h>
#include <stdlib.h>
#include <stddef.h>
#include <stdio.h>

uint32_t get_bits(const uint8_t *in, size_t byte_pos, uint8_t bit_pos, uint8_t count, size_t* byte_pos_out, uint8_t* bit_pos_out) {
    uint32_t result = (in[byte_pos] >> bit_pos);
    byte_pos++;
    uint8_t count1 = 8 - bit_pos;
    count -= count1;
    bit_pos = 0;
    if (count >= 8) {
        result ^= ((uint32_t) in[byte_pos]) << count1;
        byte_pos++;
        count -= 8;
        count1 += 8;
    }
    if (count > 0) {
        result ^= ((uint32_t)(in[byte_pos] & ((1 << count) - 1))) << count1;
        bit_pos = count;
    }                        
    *byte_pos_out = byte_pos;
    *bit_pos_out = bit_pos;
    return result;
}

const uint8_t TEST[] = {0xFF, 0xFA, 0x00, 0xAB, 0x75, 0x67, 0x31, 0x11, 0x00, 0xFF, 0x00};

int main() {
    size_t byte_pos_out;
    uint8_t bit_pos_out;
    printf("%04x\n", get_bits(TEST, 0, 0, 9, &byte_pos_out, &bit_pos_out));
    printf("%d\n", byte_pos_out);
    printf("%d\n", bit_pos_out);
    return 0;
}            